# Generated from protos/wellknown.proto
# DO NOT EDIT: This file is automatically generated by protoc-gen-py-mcp
# Plugin version: protoc-gen-py-mcp

from typing import Optional, List, Dict, Any
from fastmcp import FastMCP
from google.protobuf import json_format

import protos.wellknown_pb2

def create_wellknownservice_server() -> FastMCP:
    """Create an MCP server for WellKnownService service tools."""
    mcp = FastMCP("WellKnownService")

    @mcp.tool()
    def process_with_well_known_types(created_at: str, timeout: str, metadata: dict, config: dict, title: str, count: int, enabled: bool, updated_at: Optional[str] = None, retry_interval: Optional[str] = None) -> dict:
        """Tool for ProcessWithWellKnownTypes RPC method."""
        # Parameters:
        #   created_at: str
        #   timeout: str
        #   metadata: dict
        #   config: dict
        #   title: str
        #   count: int
        #   enabled: bool
        #   updated_at: Optional[str]
        #   retry_interval: Optional[str]
        
        # Construct request message
        request = protos.wellknown_pb2.WellKnownTypesRequest()
        request.created_at = created_at
        request.timeout = timeout
        request.metadata = metadata
        request.config = config
        request.title = title
        request.count = count
        request.enabled = enabled
        if updated_at is not None:
            request.updated_at = updated_at
        if retry_interval is not None:
            request.retry_interval = retry_interval
        
        # TODO: Implement actual ProcessWithWellKnownTypes logic here
        # For now, create an empty response
        response = protos.wellknown_pb2.WellKnownTypesResponse()
        
        # Convert response to dict for MCP
        result = json_format.MessageToDict(response, use_integers_for_enums=True)
        return result
    
    @mcp.tool()
    def get_status() -> dict:
        """Tool for GetStatus RPC method."""
        # Construct request message
        request = protos.wellknown_pb2.Empty()
        
        # TODO: Implement actual GetStatus logic here
        # For now, create an empty response
        response = protos.wellknown_pb2.WellKnownTypesResponse()
        
        # Convert response to dict for MCP
        result = json_format.MessageToDict(response, use_integers_for_enums=True)
        return result
    
    return mcp

